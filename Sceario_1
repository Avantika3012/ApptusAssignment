Q1 - SCENARIO
A car rental company called FastCarz has a .net Web Application and Web API which are recently migrated from on-premise system to Azure cloud using Azure Web App Service
and Web API Service.
The on-premises system had 3 environments Dev, QA and Prod.
The code repository was maintained in TFS and moved to Azure GIT now. The TFS has daily builds which triggers every night which build the solution and copy the build package to drop folder.
deployments were done to the respective environment manually. The customer is planning to setup Azure DevOps service for below requirements:

1) The build should trigger as soon as anyone in the dev team checks in code to master branch.
Solution:  This can be achieved using the below code in yaml template. 
trigger:
- master
The pipeline will trigger based on code commit to master branch.
This is called continuous integration.

2) There will be test projects which will create and maintained in the solution along the Web and API. The trigger should build all the 3 projects - Web, API and test.
   The build should not be successful if any test fails.
Solution: The pipeline which is created will have all 3 projects details in section “Parameters”.  This pipeline will trigger based on master branch code check in.

3) The deployment of code and artifacts should be automated to Dev environment. 
Solution: Deployment stage needs to be added in built pipeline. 
The stage will contain task to download artifact in build agent and then deploy it to Dev environment. 
stage: ‘DevDeployment’
dependsOn: Build
jobs:
deployment: Deploy 
pool:
 	vmImage: ‘<VM Image>’
environment: dev

Dev deployment will depend on successful build in the pipeline. We need to enable continuous deployment trigger icons in the Artifacts section so that a release in dev env is created every time a new build is available.

4) Upon successful deployment to the Dev environment, deployment should be easily promoted to QA and Prod through an automated process.
Solution: Along with Dev Stage QA and Prod stages need to be added in pipeline configuration. Both QA and Prod stages will have dependOn: Dev (name of Dev stage). Hence code will be easily promoted to QA and Prod on successful deployment to Dev environment.
 
5) The deployments to QA and Prod should be enabled with Approvals from approvers only.
Solution: We need to implement manual approval checks in the QA and Prod environment. Go to QA and Prod Environments and on the top right corner select “Approval and Checks”














